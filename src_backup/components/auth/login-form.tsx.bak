'use client';

import { useState } from "react";
import { Button } from "../ui/button";
import { Input } from "../ui/input";
import { Label } from "../ui/label";
import { Card, CardContent, CardHeader } from "../ui/card";
import { Eye, EyeOff, Mail, Lock, ExternalLink } from "lucide-react";
import { auth } from "@/lib/firebase";
import { signInWithEmailAndPassword } from "firebase/auth";
import { useRouter } from "next/navigation";

export default function LoginForm() {  const router = useRouter();  const [showPassword, setShowPassword] = useState(false);  const [email, setEmail] = useState("");  const [password, setPassword] = useState("");  const [error, setError] = useState("");  const [loading, setLoading] = useState(false);  const handleSubmit = async (e: React.FormEvent) => {    e.preventDefault();    setError("");    setLoading(true);    if (!email || !password) {      setError("Por favor, preencha todos os campos");      setLoading(false);      return;    }    try {      const userCredential = await signInWithEmailAndPassword(auth, email, password);      if (userCredential.user) {        const idToken = await userCredential.user.getIdToken();        // Armazenar o token de forma segura        document.cookie = `session=${idToken}; path=/; secure; samesite=strict; max-age=3600`;                // Redirecionar para a página principal        router.push("/");      }    } catch (error: any) {      console.error("Erro no login:", error);      setError(        error.code === "auth/invalid-credential"          ? "Email ou senha incorretos"          : "Ocorreu um erro ao fazer login. Por favor, tente novamente."      );    } finally {      setLoading(false);    }  };  return (    <div className="h-screen w-screen bg-[#080808] relative overflow-hidden flex items-center justify-center">      {/* Efeito de brilho radial dourado */}      <div className="absolute inset-0">        <div className="absolute inset-0 bg-[#FFB800] opacity-[0.04] blur-[80px]"></div>        <div className="absolute inset-[-20%] bg-[#FFB800] opacity-[0.03] blur-[120px] rotate-45"></div>        <div className="absolute inset-[-50%] bg-[#FFB800] opacity-[0.02] blur-[150px]"></div>      </div>      <div className="w-[420px] relative">        {/* Borda com gradiente suave */}        <div className="absolute -inset-[1px] rounded-2xl overflow-hidden">          <div className="absolute inset-0 bg-gradient-to-r from-transparent via-[#FFB800]/20 to-transparent opacity-50"></div>          <div className="absolute inset-0 bg-gradient-to-b from-transparent via-[#FFB800]/20 to-transparent opacity-50"></div>        </div>        <Card className="w-full bg-transparent border-0 shadow-none backdrop-blur-sm overflow-hidden rounded-2xl p-8 relative z-10">          <CardHeader className="text-center space-y-4 pb-6">            <div className="space-y-2">              <h1 className="text-3xl font-bold tracking-wider text-[#FFB800]">                IACAM              </h1>              <div className="flex items-center justify-center gap-2">                <div className="h-[1px] w-12 bg-[#FFB800]/20"></div>                <span className="text-sm bg-[#FFB800]/10 text-[#FFB800] px-2 py-0.5 rounded">2.0</span>                <div className="h-[1px] w-12 bg-[#FFB800]/20"></div>              </div>              <h2 className="text-[#FFB800]/60 text-sm">Acesso Exclusivo</h2>            </div>          </CardHeader>                    <CardContent className="space-y-6">            <form onSubmit={handleSubmit} className="space-y-4">              <div className="space-y-2">                <Label className="text-[#FFB800]/70">Email</Label>                <div className="relative">                  <Input                    type="email"                    value={email}                    onChange={(e) => setEmail(e.target.value)}                    placeholder="seu@email.com"                    className="w-full bg-transparent border-[#FFB800]/20 text-[#FFB800] rounded-lg px-4 py-3 focus:outline-none focus:border-[#FFB800]/40 transition-all duration-200 placeholder:text-[#FFB800]/30"                  />                  <Mail className="absolute right-3 top-1/2 transform -translate-y-1/2 text-[#FFB800]/40 w-5 h-5" />                </div>              </div>              <div className="space-y-2">                <Label className="text-[#FFB800]/70">Senha</Label>                <div className="relative">                  <Input                    type={showPassword ? "text" : "password"}                    value={password}                    onChange={(e) => setPassword(e.target.value)}                    placeholder="••••••••"                    className="w-full bg-transparent border-[#FFB800]/20 text-[#FFB800] rounded-lg px-4 py-3 focus:outline-none focus:border-[#FFB800]/40 transition-all duration-200 placeholder:text-[#FFB800]/30"                  />                  <button                    type="button"                    onClick={() => setShowPassword(!showPassword)}                    className="absolute right-3 top-1/2 transform -translate-y-1/2 text-[#FFB800]/40 hover:text-[#FFB800]/60"                  >                    {showPassword ? (                      <EyeOff className="w-5 h-5" />                    ) : (                      <Eye className="w-5 h-5" />                    )}                  </button>                </div>              </div>              {error && (                <div className="bg-red-500/10 text-red-400 text-sm p-3 rounded-lg border border-red-500/20">                  {error}                </div>              )}              <Button                type="submit"                disabled={loading}                className="w-full bg-[#FFB800] hover:bg-[#FFB800]/90 text-black font-medium py-3 rounded-lg transition-all duration-300 flex items-center justify-center gap-2 shadow-[0_0_30px_rgba(255,184,0,0.2)] hover:shadow-[0_0_40px_rgba(255,184,0,0.3)]"              >                {loading ? (                  "Entrando..."                ) : (                  <>                    Acessar Plataforma                    <ExternalLink className="w-4 h-4" />                  </>                )}              </Button>            </form>            <div className="text-center pt-4">
              <div>
                <a
                  href="#"
                  className="text-[#FFB800] hover:underline text-sm"
                >
                  Não tem uma conta? Registre-se
                </a>
                <p className="text-[#FFB800]/40 text-xs mt-4">
                  © 2025 IACAM I.A. - Tecnologia Avançada
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
