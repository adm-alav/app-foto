'use client';

import { useState } from "react";
import { Button } from "../ui/button";
import { Input } from "../ui/input";
import { Label } from "../ui/label";
import { Card, CardContent, CardHeader } from "../ui/card";
import { Eye, EyeOff, Mail, Lock, ExternalLink } from "lucide-react";
import { auth } from "@/lib/firebase";
import { signInWithEmailAndPassword } from "firebase/auth";
import { useRouter } from "next/navigation";

export default function LoginForm() {
  const router = useRouter();
  const [showPassword, setShowPassword] = useState(false);
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    
    try {
      // Modo de demonstração - aceita qualquer credencial
      document.cookie = `session=demo-token; path=/; secure; samesite=strict`;
      await new Promise(resolve => setTimeout(resolve, 500));
      window.location.href = '/';
    } catch (error) {
      console.error('Erro no redirecionamento:', error);
      setError('Erro ao redirecionar. Por favor, tente novamente.');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center p-4">
      <Card className="w-full max-w-md bg-black/40 border border-[#FFD700]/20 shadow-2xl backdrop-blur-lg overflow-hidden rounded-xl p-8">
        <CardHeader className="text-center space-y-4 pb-6">
          <div className="space-y-2">
            <h1 className="text-3xl font-bold tracking-wider text-[#FFD700]">
              IACAM
            </h1>
            <div className="flex items-center justify-center gap-2">
              <div className="h-[1px] w-12 bg-[#FFD700]/20"></div>
              <span className="text-sm bg-[#FFD700]/10 text-[#FFD700] px-2 py-0.5 rounded">2.0</span>
              <div className="h-[1px] w-12 bg-[#FFD700]/20"></div>
            </div>
            <h2 className="text-[#FFD700]/80 text-sm">Acesso Exclusivo</h2>
          </div>
        </CardHeader>
        
        <CardContent className="space-y-6">
          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="space-y-2">
              <Label className="text-[#FFD700]/80">Email</Label>
              <div className="relative">
                <Input
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  placeholder="seu@email.com"
                  className="w-full bg-black/40 border-[#FFD700]/20 text-[#FFD700] rounded-lg px-4 py-3 focus:outline-none focus:border-[#FFD700] transition-all duration-200"
                />
                <Mail className="absolute right-3 top-1/2 transform -translate-y-1/2 text-[#FFD700]/50 w-5 h-5" />
              </div>
            </div>

            <div className="space-y-2">
              <Label className="text-[#FFD700]/80">Senha</Label>
              <div className="relative">
                <Input
                  type={showPassword ? "text" : "password"}
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  placeholder="••••••••"
                  className="w-full bg-black/40 border-[#FFD700]/20 text-[#FFD700] rounded-lg px-4 py-3 focus:outline-none focus:border-[#FFD700] transition-all duration-200"
                />
                <button
                  type="button"
                  onClick={() => setShowPassword(!showPassword)}
                  className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-300"
                >
                  {showPassword ? (
                    <EyeOff className="w-5 h-5" />
                  ) : (
                    <Eye className="w-5 h-5" />
                  )}
                </button>
              </div>
            </div>

            {error && (
              <div className="bg-red-500/10 text-red-400 text-sm p-3 rounded-lg border border-red-500/20">
                {error}
              </div>
            )}

            <Button
              type="submit"
              disabled={loading}
              className="w-full bg-[#FFB800] hover:bg-[#FFB800]/90 text-black font-medium py-3 rounded-lg transition-all duration-200 flex items-center justify-center gap-2"
            >
              {loading ? (
                "Entrando..."
              ) : (
                <>
                  Acessar Plataforma
                  <ExternalLink className="w-4 h-4" />
                </>
              )}
            </Button>
          </form>

          <div className="text-center pt-4">
            <a
              href="#"
              className="text-[#FFB800] hover:underline text-sm"
            >
              Não tem uma conta? Registre-se
            </a>
            <p className="text-gray-600 text-xs mt-4">
              © 2025 IACAM I.A. - Tecnologia Avançada
            </p>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
